{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "circular-progress",
  "type": "registry:component",
  "title": "Circular Progress",
  "description": "A circular progress indicator.",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/circular-progress/CircularProgress.vue",
      "content": "<template>\n  <div class=\"relative\">\n    <ProgressRoot\n      :model-value=\"progress\"\n      as-child>\n      <svg\n        style=\"--stroke-width: 6px\"\n        class=\"w-full h-full\"\n        viewBox=\"0 0 100 100\">\n        <!-- Background circle -->\n        <path\n          :d=\"trackPath\"\n          class=\"fill-none stroke-muted stroke-(length:--stroke-width)\"/>\n        <!-- Progress circle -->\n        <ProgressIndicator as-child>\n          <path\n            :d=\"trackPath\"\n            class=\"fill-none stroke-primary stroke-(length:--stroke-width) transition-[stroke-dasharray,opacity] duration-700 data-[value='0']:opacity-0\"\n            :style=\"{\n              'stroke-linecap': 'round',\n              'stroke-dasharray': `${dashOffset}px, ${circumference}px`,\n              'stroke-dashoffset': '0px',\n            }\"/>\n        </ProgressIndicator>\n      </svg>\n      <div class=\"absolute inset-0 flex items-center justify-center\">\n        <span class=\"font-bold text-foreground\">{{ progress }}%</span>\n      </div>\n    </ProgressRoot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ProgressIndicator, ProgressRoot } from 'reka-ui'\nimport { computed } from 'vue'\n\nconst RADIUS = 45\nconst circumference = 2 * Math.PI * RADIUS\n\nconst props = defineProps<{\n  progress: number;\n}>()\n\nconst dashOffset = computed(() =>\n  (props.progress / 100) * circumference,\n)\n\nconst trackPath = computed(() => {\n  const r = RADIUS\n  return `\n          M 50 50\n          m 0 -${r}\n          a ${r} ${r} 0 1 1 0 ${r * 2}\n          a ${r} ${r} 0 1 1 0 -${r * 2}\n          `\n})\n</script>",
      "type": "registry:component"
    }
  ]
}